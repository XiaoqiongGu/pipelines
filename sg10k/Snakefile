import os
from snakemake.utils import report

# non-login bash
shell.executable("/bin/bash")
# activate "unofficial bash strict mode" http://www.redsymbol.net/articles/unofficial-bash-strict-mode/
shell.prefix("set -euo pipefail;")


# FIXME to conf once downstream handling clear
MARK_SHORT_SPLITS="-M"# "-M" or ""

# Debugging config:
#for k, v in config.items():
#        print("DEBUG {} {}".format(k, v))


include: "rules/samtools.rules"
include: "rules/bwa.rules"

        
rule final:
  input:
        bam='FIXME.bwamem.fixmate.mdups.srt.bam',
        bai='FIXME.bwamem.fixmate.mdups.srt.bam.bai',
        stats='FIXME.bwamem.fixmate.mdups.srt.stats.txt',
    
  message: 'Pipeline run successfully completed'
  output:  'COMPLETE'
  shell:   'touch {output}'


# Expecting gzipped PE input (internal) with read length >70 (BWA-MEM)
rule map_mdups_sort:
    input:
        reffa=config['files']['reffa'],
        reffai=config['files']['reffa'] + ".pac",
        fq1=config['files']['fq1'],
        fq2=config['files']['fq2']
    output:
        sam="FIXME.bwamem.fixmate.mdups.srt.bam"
    params:
        mark_short_splits=MARK_SHORT_SPLITS,
        rg="@RG\tID:1\tPL:illumina\tPU:PU-FIXME\tLB:LB-FIXME\tSM:SM-FIXME\tCN:GIS"
    message:
        'Aligning PE reads, fixing mate information, marking duplicates and converting to sorted BAM'
    threads:
        16
        # FIXME how does runtime scale with threads?
    benchmark:
        # should have same name as rule
        'benchmark_map_mdups_sort.txt'
    shell:
        """
        module load bwa/{config[modules][bwa]}
        module load samtools/{config[modules][samtools]}
        module load samblaster/{config[modules][samblaster]}

        # cat process substitution will work for gzipped and plain fastq
        # and allows for concatentation on the fly
        #
        # fixmate only works on name sorted files. ignores secondary 
        # alignments, i.e. safe to use with bwa mem -M:
        # http://sourceforge.net/p/samtools/mailman/message/30556922/
        # 
	# samtools sort might need control of max thread memory to not go 
        # over limit for v1.3 it's 768M. if we use 16threads this amounts 
        # to max 12.3GB
	#
        # using samtools instead of sambamba for view and sort:
        # http://genomespot.blogspot.sg/2015/03/sambamba-vs-samtools.html says
        # runtime difference are not too huge and samtools is the conservative
        # choice anyway
        #
        bwa mem {params.mark_short_splits} -R "{params.rg}" {input.reffa} <(cat {input.fq1}) <(cat {input.fq2}) -t {threads} | \
        samtools fixmate -O sam - - | \
        samblaster {params.mark_short_splits} | \
        samtools view -@ {threads} -bu -o - | \
        samtools sort -@ {threads} -o {output.sam} -
        """

# FIXME rule report:
# write program versions
    
