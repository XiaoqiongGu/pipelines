import getpass

from pipelines import send_status_mail, generate_timestamp
from elmlogger import ElmLogging, ElmUnit


def getuser():
    return getpass.getuser()


for k in ['readunits', 'ELM', 'samples']:
    assert k in config, ("Missing config key %s" % k)
assert 'RESULT_OUTDIR' in workflow.globals, (
    "RESULT_OUTDIR missing in workflow.globals")


onstart:# available as patched snakemake 3.5.5
    global elm_logger

    elm_units = []
    for unit in config['readunits'].values():
        # For non-bcl2fastq pipelines use the input as library_files
        library_files = [unit['fq1']]
        if 'fq2' in unit and unit['fq2'] is not None:
            library_files.append(unit['fq2'])
        eu = ElmUnit._make([unit['run_id'], unit['library_id'], unit['lane_id'], library_files, None])
        elm_units.append(eu)
            
    elm_logger = ElmLogging(workflow.snakefile,
                            config['ELM']['pipeline_name'],
                            config['ELM']['pipeline_version'],
                            getuser(),#SET_ON_EXEC
                            config['ELM']['site'],
                            generate_timestamp(),# crutch: master jid would be best, but impossible to get here
                            config['ELM']['log_path'],#SET_ON_EXEC
                            elm_units)
    elm_logger.start()


onsuccess:
    elm_logger.stop(True)
    analysis_name = config.get('analysis_name', ",".join(config['samples']))
    pipeline_name = config['ELM']['pipeline_name']
    mail_address = config.get('mail_address')
    if config.get('mail_on_completion', False):
        send_status_mail(pipeline_name, True, analysis_name,
                         os.path.abspath(RESULT_OUTDIR), mail_address)


onerror:
    elm_logger.stop(False)
    analysis_name = config.get('analysis_name', ",".join(config['samples']))
    pipeline_name = config['ELM']['pipeline_name']
    mail_address = config.get('mail_address')
    if config.get('mail_on_completion'):
        send_status_mail(pipeline_name, False, analysis_name,
                         os.path.abspath(RESULT_OUTDIR), mail_address)
